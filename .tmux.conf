# Copy
# Use vim keybinding
setw -g mode-keys vi
# for macos, share clipboard using pbcopy
# and 'v' to begin selection
# (reattach-to-user-namespace is not needed for tmux 2.6)
if "[[ $(uname) == 'Darwin' ]]" \
     'bind-key -T copy-mode-vi v send-keys -X begin-selection;  bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"' \
     ''

# Keybindings
# prefix: C-s
unbind-key -n C-a
set -g prefix C-s
# for nested tmux
bind-key C-s send-prefix  # C-s C-s
bind-key -n M-s send-prefix  # M-s
# esc response
set -s escape-time 0
# refresh time
set -g status-interval 300
# window index starting from 1
set -g base-index 1
setw -g pane-base-index 1

# pane-moving
# in tmux>=2.0, default path is deprecated.
if "[[ $(tmux -V) == *2.* ]]" \
     'bind | split-window -h -c "#{pane_current_path}";  bind - split-window -v -c "#{pane_current_path}"' \
     'bind | split-window -h; bind - split-window -v'

bind -n M-k select-pane -U
bind -n M-j select-pane -D
# -r: avoid repeating
# bind -n -r M-h run-shell 'tmux select-window -t :-; echo hoge'

# $SSH_CLIENT "ローカルの時" "sshの時"
# $is_ssh 一枚のsshがあった時
is_ssh='echo "#{pane_current_command}" | grep -iqE "ssh" && (( #{window_panes} < 2 ))'
# is_ssh='echo "#{pane_current_command}" | grep -iqE "ssh"'
cmd_ssh='echo "#{pane_current_command}"'
# bind -n -r M-h run-shell 'tmux if-shell "$PATH" "" "select-window -t :-"'
# bind -n -r M-h run-shell 'tmux select-window -t :+; tmux if-shell "$is_ssh" "set -g status-right \'ssh\'" "set -g status-right \'none\'";'
# bind -n -r M-h run-shell "tmux select-window -t :-; tmux if-shell \"$is_ssh\" \"set -g status-right 'ssh'\" \"set -g status-right 'none'\""
# bind -n -r M-h run-shell 'tmux select-window -t :+'
# bind -n -r M-l if-shell "$is_ssh" "run-shell 'echo ssh'" "run-shell 'echo none'"
# tmux if-shell $SSH_CLIENT'
# bind -n -r M-l run-shell "tmux select-window -t :+; tmux if-shell \"$is_ssh\" \"set -g status-right 'ssh'\" \"set -g status-right 'none'\""
# bind -n -r M-l run-shell 'tmux select-window -t :+'

# set-hook -g after-select-window "if-shell \"$is_ssh\" \"set -g status-right 'ssh mode'\" \"set -g status-right 'none'\""
# set-hook -g after-select-window 'if-shell \"$is_ssh\" \'\' \'set -g status-right "hoge"\''
# set-hook -g after-select-window 'if-shell $is_ssh "set -g status-right 'normal'" "set -g status-right 'ssh'"'

# set-hook -g after-select-window 'set -g status-right "#{pane_current_command}"'  # commandだけ表示する
# set-hook -g after-select-window 'run-shell "$cmd_ssh"'  # これはきちんと動く

to_ssh_mode=''
to_normal_mode=''

set-hook -g after-select-window 'if-shell $is_ssh \
  "set -g status-right 'ssh-mode'; set -g status-bg 'colour9'; set-option -g prefix M-s; bind-key -n C-s send-prefix" \
  "set -g status-right 'normal-mode'; set -g status-bg 'colour239'; set-option -g prefix C-s; unbind-key -n C-s"'

set-hook -g window-pane-changed 'if-shell $is_ssh \
  "set -g status-right 'ssh-mode'; set -g status-bg 'colour9'; set-option -g prefix M-s; unbind-key -n C-s; bind-key -n C-s send-prefix" \
  "set -g status-right 'normal-mode'; set -g status-bg 'colour239'; set-option -g prefix C-s; unbind-key -n C-s"'

bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Appearances
# enable color
set -g default-terminal "screen-256color"
# status bar
set -g status-left-length 40
set -g status-left "S:#S "
set -g status-right "#H"
if "[[ $(tmux -V) == *2.* ]]" \
     'set -g status-position top' \
     ''

# when linux
if-shell 'test "$(uname -s)" = Linux' \
  'set -g status-right "Linux"' \
  ''

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
# mouse
# different when tmux -V >= 2.1
# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
if-shell '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    'set-option -g -q mouse on' \
    'set-option -g mouse-select-pane on; set-option -g mouse-select-window on; set-option -g mouse-resize-pane on; set-option -g mode-mouse on'

# status bar color
set -g status-fg white
# set -g status-bg colour239
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg red
# border accent
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# Scroll Buffer
set-option -g history-limit 10000


