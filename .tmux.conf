# Copy
# Use vim keybinding
set-window-option -g mode-keys vi
# for macos, share clipboard using pbcopy
# and 'v' to begin selection
# (reattach-to-user-namespace is not needed for tmux 2.6)
if "[[ $(uname) == 'Darwin' ]]" \
     'bind-key -T copy-mode-vi v send-keys -X begin-selection;  bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"' \
     ''

# remote clipboard shearing
# if remote tmux over ssh, use wincent/clipper, which uses TCP port 8377
# tmux -V < 1.8: cannot use copy-pipe, so (1) select and copy using copy-mode (2) hit M-y to transfer clipboard
# tmux -V >= 1.8: can use bind-key -t vi-copy Enter copy-pipe "nc localhost 8377" and will automatically be transfered to host
if-shell 'test -n "$SSH_CLIENT" && netstat -an | grep -iqE :8377' \
  "set -g status-left 'S:#S(CB) '" \
  "set -g status-left 'S:#S(NCB) '"
if-shell 'test -n "$SSH_CLIENT" && netstat -an | grep -iqE :8377' \
  "bind -n M-y run-shell 'tmux save-buffer - | nc localhost 8377 && echo sent!'" \
  ""

# Keybindings
# prefix: C-s
unbind-key -n C-a
set -g prefix C-s
# for nested tmux
bind-key C-s send-prefix  # C-s C-s
bind-key -n M-s send-prefix  # M-s
# esc response
set -s escape-time 0
# refresh time
set -g status-interval 300
# window index starting from 1
set -g base-index 1
setw -g pane-base-index 1

# navigation command
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
bind -r , select-window -t :-
bind -r . select-window -t :+
# pane-moving
# in tmux>=2.0, default path is deprecated.
if "[[ $(tmux -V) == *2.* ]]" \
     'bind ^ split-window -h -c "#{pane_current_path}";  bind - split-window -v -c "#{pane_current_path}"' \
     'bind ^ split-window -h; bind - split-window -v'

# intelligence navigation command
# M-hjkl: if tmux session over ssh is shown, move the tmux pane. else, move local tmux pane.
# M--, M-|: if tmux session over ssh is shown, split the remote tmux pane. else split local tmux pane.
# M-,, M-.: always move local tmux window.
is_ssh='echo "#{pane_current_command}" | grep -iqE "ssh" && (( #{window_panes} < 2 ))'
bind -n M-k if-shell "$is_ssh" "send-prefix; send-keys k" "select-pane -U"
bind -n M-j if-shell "$is_ssh" "send-prefix; send-keys j" "select-pane -D"
bind -n M-h if-shell "$is_ssh" "send-prefix; send-keys h" "select-pane -L"
bind -n M-l if-shell "$is_ssh" "send-prefix; send-keys l" "select-pane -R"
bind -n M-, select-window -t :-
bind -n M-. select-window -t :+
bind -n M-- if-shell "$is_ssh" "send-prefix; send-keys -" "split-window -v -c \"#{pane_current_path}\""
bind -n M-^ if-shell "$is_ssh" "send-prefix; send-keys ^" "split-window -h -c \"#{pane_current_path}\""
bind -n M-c new-window
bind -n M-[ copy-mode
bind -n M-z if-shell "$is_ssh" "send-prefix; send-keys z" "resize-pane -Z"
# to move pane of remote-tmux, user M-H, M-L
bind -n M-< if-shell "$is_ssh" "send-prefix; send-keys p" "select-window -t :-"
bind -n M-> if-shell "$is_ssh" "send-prefix; send-keys n" "select-window -t :+"
bind -n M-C if-shell "$is_ssh" "send-prefix; send-keys c" "new-window"
bind -n M-{ if-shell "$is_ssh" "send-prefix; send-keys [" "copy-mode"

to_ssh_mode=' \
  set -g status-right 'ssh-mode'; \
  set -g status-fg 'colour232'; \
  set -g status-bg 'colour196'; \
  set-window-option -g window-status-current-style fg='colour232',bg='colour226''

to_normal_mode=' \
  set -g status-right "#H"; \
  set -g status-fg 'colour15'; \
  set -g status-bg 'colour239'; \
  set-window-option -g window-status-current-style fg='colour232',bg='colour226''

# if local, set hook
# if-shell 'test -z "$SSH_CLIENT"' "\
#   set-hook -g after-select-window 'if-shell $is_ssh $to_ssh_mode $to_normal_mode'; \
#   set-hook -g window-pane-changed 'if-shell $is_ssh $to_ssh_mode $to_normal_mode'"
set-hook -g after-select-window 'if-shell $is_ssh $to_ssh_mode $to_normal_mode'
set-hook -g window-pane-changed 'if-shell $is_ssh $to_ssh_mode $to_normal_mode'

# Appearances
# enable color
set -g default-terminal "screen-256color"
# status bar
set -g status-left-length 40
set -g status-left "S:#S "
set -g status-right "#H"
if "[[ $(tmux -V) == *2.* ]]" \
     'set -g status-position top' \
     ''

# when linux
if-shell 'test "$(uname -s)" = Linux' \
  'set -g status-right "Linux"' \
  ''

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
# mouse
# different when tmux -V >= 2.1
# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
#    'set-option -g -q mouse on' \
#    'set-option -g mouse-select-pane on; set-option -g mouse-select-window on; set-option -g mouse-resize-pane on; set-option -g mode-mouse on'

set-option -g -q mouse on

# status bar color
set -g status-fg colour15
set -g status-bg colour239
set-window-option -g window-status-current-style fg=colour232,bg=colour226
set -g pane-active-border-style fg=colour15,bg=colour239

# Scroll Buffer
set-option -g history-limit 10000


